{"version":3,"sources":["flowparser/CommonTools.js","flowparser/Constructor.js","flowparser/FlowOrder.js","flowparser/FlowStateNames.js","flowparser/Flowparser.js","flowparser/Initials.js","flowparser/Forward.js","flowparser/SaveLoad.js","flowparser/Codepaper.js","helpers/AppBottom.js","helpers/DrawConnections.js","flowpoint/FlowpointSettings.js","flowpoint/Flowpoint.js","flowpoint/DrawPoints.js","helpers/TopBar.js","App.js","serviceWorker.js","index.js"],"names":["getFlowCodeName","flowpoints","key","name","concat","isDownStream","targetkey","myKey","order","testorder","Object","keys","map","visited","outputs","inputs","recIsDownStream","depth","maxdepth","includes","isDone","testkey","length","initFlowpoints","msg","point","flowtype","config","layertypes","ref","activationtypes","longestKey","params","configkey","Math","max","conf","i","type","current","val","toString","substring","parseInitArgs","getOrdered","inps","parseInt","push","ready","finished","recgetOrdered","myData","getInputs","getStateNames","statenames","init_states","lastUser","maxIndex","index","getLastUser","parseFlowPoints","getWelcome","addFlatten","getFlatten","initialized","initStates","getConstructor","last","inpkey","replace","getForward","pointcode","getSaveLoad","Codepaper","props","settings","showPaper","react_default","a","createElement","style","position","bottom","right","width","zIndex","Paper_default","elevation","background","maxHeight","overflowY","default_highlight","language","github","DefaultPointState","openMenu","anchorEl","x","y","height","gotInput","gotOutput","isOpen","linear","title","id","in_features","out_features","bias","outshape","inp","p","idx","out_shape","autoparams","flatten","features","round","conv1d","in_channels","out_channels","kernel_size","stride","padding","dilation","groups","L_in","L_out","floor","conv2d","H_in","W_in","H_out","W_out","conv3d","D_in","D_out","maxpool1d","return_indices","ceil_mode","maxpool2d","maxpool3d","batchnorm1d","num_features","eps","momentum","affine","track_running_stats","batchnorm2d","batchnorm3d","groupnorm","num_groups","num_channels","instancenorm1d","instancenorm2d","instancenorm3d","rnn","input_size","hidden_size","num_layers","nonlinearity","options","batch_first","dropout","bidirectional","lstm","gru","rnncell","lstmcell","grucell","inplace","dropout2d","dropout3d","alphadropout","elu","alpha","hardshrink","lambd","hardtanh","min_val","max_val","leakyrelu","negative_slope","logsigmoid","prelu","num_parameters","init","relu","relu6","rrelu","lower","upper","selu","celu","sigmoid","softplus","beta","threshold","softshrink","softsign","tanh","tanhshrink","value","softmin","dim","softmax","softmax2d","logsoftmax","output_shape","input_point_dims","parse_url","split","pointmsg","newpoint","mainparams","raw_type","done","t_key","raw_params","sort","paramkey","parseFloat","parsePoint","outkey","gen_url","gotKey","inputToString","pointToString","AppBottom","snapX","snapY","refresh","left","paddingRight","Tooltip_default","IconButton_default","onClick","zoom","min","updateSettings","ZoomIn_default","ZoomOut_default","paddingLeft","Fab_default","color","aria-label","state","count","lastPosX","lastPosY","updateLastPos","updateView","Add_default","Code_default","copy","snackbarMsg","showSnackbar","Save_default","DrawConnections","connections","key1","point1","key2","point2","x1","y1","x2","y2","d","fill","stroke","strokeWidth","overflow","offset","stop-color","FlowpointParams","localState","className","noValidate","autoComplete","onSubmit","e","preventDefault","TextField_default","label","margin","marginTop","onChange","target","updateFlowpoints","Typography_default","variant","myState","FormGroup_default","row","FormControlLabel_default","control","Switch_default","checked","diff","Array","from","FlowpointSettings","Select_default","native","marginLeft","splice","indexOf","Divider_default","layerkey","activationkey","top","ExpandLess_default","ExpandMore_default","FlowpointSettings_FlowpointParams","ConnectInput","currentOutput","currentInput","float","pointerEvents","disabled","boxShadow","Close_default","fontSize","KeyboardArrowRight_default","ConnectOutput","Flowpoint","react_draggable_default","grid","bounds","cancel","defaultPosition","onDrag","event","dragElement","node","clientHeight","paddingBottom","Flowpoint_ConnectInput","Card_default","marginRight","FlowpointSettings_FlowpointSettings","Delete_default","shape","shapeMsg","Flowpoint_ConnectOutput","DrawPoints","points","Flowpoint_Flowpoint","TopBar","AppBar_default","Toolbar_default","flexGrow","href","fa","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","bezierOffset","maxX","maxY","url","bind","assertThisInitialized","updateFrameSize","autoFrameSize","setOutputShapes","mult","addr","window","location","max_idx","setState","error","_this2","bestInp","_this3","history","replaceState","mainRef","paddingTop","Codepaper_Codepaper","transform","transform-origin","transition","DrawConnections_DrawConnections","DrawPoints_DrawPoints","TopBar_TopBar","AppBottom_AppBottom","Snackbar_default","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","message","Component","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.c8ef5884.chunk.js","sourcesContent":["import React from 'react';\n\nexport function breakUpLines(msg, addition) {\n  // Pun intended\n  addition.split('\\n').map(val => {\n    msg.push(val)\n    msg.push(<br />)\n  })\n}\n\nexport function getFlowCodeName(flowpoints, key) {\n  return flowpoints[key].name ? flowpoints[key].name : 'flowpoint_'.concat(key)\n}\n\nfunction recIsDownStream(targetkey, myKey, testorder, depth, order, maxdepth) {\n  if (order.includes(myKey)) {return false}\n  if (targetkey === myKey) {return true}\n  testorder[myKey].visited = true\n  var isDone = false\n  if (depth < maxdepth) {\n    testorder[myKey].outputs.map(testkey => {\n      if (!isDone && !testorder[testkey].visited) {\n        isDone = recIsDownStream(targetkey, testkey, testorder, depth + 1, order, maxdepth)\n      }\n    })\n  }\n  return isDone\n}\n\nexport function isDownStream(flowpoints, targetkey, myKey, order) {\n  var testorder = {}\n  Object.keys(flowpoints).map((key) => {\n    testorder[key] = {\n      visited: false,\n      outputs: flowpoints[key].outputs,\n      inputs: flowpoints[key].inputs\n    }\n  })\n  return recIsDownStream(targetkey, myKey, testorder, 0, order, Object.keys(flowpoints).length)\n}\n","import React from 'react';\n\nimport { getFlowCodeName } from './CommonTools'\n\nfunction getFlatten() {\n  var msg = '\\n# Helper class for flattening'\n  msg += '\\nclass Flatten(nn.Module):'\n  msg += '\\n    def __init__(self):'\n  msg += '\\n        super(Flatten, self).__init__()'\n  msg += '\\n    def forward(self, x):'\n  msg += '\\n        return x.view(x.shape[0], -1)'\n  return msg\n}\n\nfunction classBasics() {\n  var msg = '\\n# Main class'\n  msg += '\\nclass neural_net(nn.Module):'\n  msg += '\\n\\n    def __init__(self, optimizer=optim.SGD, learn_rate=0.01, criterion=nn.CrossEntropyLoss(), use_cuda=None):'\n  msg += '\\n        super(neural_net, self).__init__()'\n  msg += '\\n        # Settings'\n  msg += '\\n        self.optim_type = optimizer'\n  msg += '\\n        self.optimizer = None'\n  msg += '\\n        self.learn_rate = learn_rate'\n  msg += '\\n        self.criterion = criterion'\n  msg += '\\n        # Use CUDA?'\n  msg += '\\n        self.use_cuda = use_cuda if (use_cuda != None and cuda.is_available()) else cuda.is_available()'\n  msg += '\\n        # Current loss and loss history'\n  msg += '\\n        self.train_loss = 0'\n  msg += '\\n        self.valid_loss = 0'\n  msg += '\\n        self.train_loss_hist = []'\n  msg += '\\n        self.valid_loss_hist = []'\n  return msg\n}\n\nfunction initStates(order, statenames) {\n  var msg = '        # States'\n  msg += '\\n        self.state = None'\n  var initialized = []\n  order.map(key => {\n    if (statenames[key].includes('self.state_') && !initialized.includes(statenames[key])) {\n      msg += '\\n        ' + statenames[key] + ' = None'\n      initialized.push(statenames[key])\n    }\n  })\n  return msg\n}\n\nfunction parseInitArgs(config) {\n  var msg = ''\n  var longestKey = 0\n  Object.keys(config.params).map(configkey => {\n    longestKey = Math.max(longestKey, configkey.length)\n  })\n  longestKey += 1\n  Object.keys(config.params).map(configkey => {\n    const conf = config.params[configkey]\n    msg += ',\\n            ' + configkey\n    for (var i = 0; i < longestKey - configkey.length; i++) {msg += ' '}\n    msg += '= '\n    if (conf.type.includes('tuple')) {\n      msg += '('\n      conf.current.map(val => {\n        msg += val.toString() + ','\n      })\n      msg = msg.substring(0, msg.length - 1) + ')'\n    } else {\n      if (conf.type.includes('int') && conf.current < 0) {\n        msg += 'None'\n      } else {\n        msg += conf.current\n      }\n    }\n  })\n  return '(' + msg.substring(1) + (longestKey > 1 ? '\\n        )' : ')')\n}\n\nfunction initFlowpoints(flowpoints, order) {\n  var msg = '        # Layers'\n  order.map(key => {\n    const point = flowpoints[key]\n    if (!point.flowtype.includes('input')) {\n      msg += '\\n        self.' + getFlowCodeName(flowpoints, key) + ' = '\n      var config = null\n      if (point.flowtype in point.layertypes) {\n        msg += point.layertypes[point.flowtype].ref\n        config = point.layertypes[point.flowtype]\n      } else {\n        msg += point.activationtypes[point.flowtype].ref\n        config = point.activationtypes[point.flowtype]\n      }\n      msg += parseInitArgs(config)\n    }\n  })\n  return msg\n}\n\nfunction getRoutines() {\n  var msg = '        # Running startup routines'\n  msg += '\\n        self.startup_routines()'\n  msg += '\\n\\n    def startup_routines(self):'\n  msg += '\\n        self.optimizer = self.optim_type(self.parameters(), lr=self.learn_rate)'\n  msg += '\\n        if self.use_cuda:'\n  msg += '\\n            self.cuda()'\n  return msg\n}\n\n\nexport function getConstructor(flowpoints, order, inps, statenames) {\n  var msg = ''\n  var addFlatten = false\n  order.map(key => {\n    if (flowpoints[key].flowtype.includes('flatten')) {\n      addFlatten = true\n    }\n  })\n  if (addFlatten) {\n    msg += getFlatten() + '\\n'\n  }\n  msg += classBasics()\n  msg += '\\n' + initStates(order, statenames)\n  msg += '\\n' + initFlowpoints(flowpoints, order)\n  msg += '\\n' + getRoutines()\n  return msg\n}\n","import React from 'react';\n\nimport { getFlowCodeName, isDownStream } from './CommonTools'\n\n\nfunction recgetOrdered(testorder, order, myKey, depth) {\n  myKey = parseInt(myKey)\n  var myData = testorder[myKey]\n  myData.visited = true\n  if (!myData.finished) {\n    myData.ready = true\n    myData.inputs.map(testkey => {\n      if (!testorder[testkey].ready) {\n        if (!isDownStream(testorder, testkey, myKey, order)) {\n          myData.ready = false\n        }\n      }\n    })\n    if (myData.ready && depth < 500) {\n      if (!order.includes(myKey)) {\n        order.push(myKey)\n      }\n      myData.finished = true\n      myData.outputs.map(testkey => {\n        order = recgetOrdered(testorder, order, testkey, depth + 1)\n      })\n    }\n  }\n  return order\n}\n\nexport function getOrdered(flowpoints, inps) {\n  var order = []\n  var testorder = {}\n  Object.keys(flowpoints).map((key) => {\n    key = parseInt(key)\n    if (flowpoints[key].flowtype.includes('input')) {\n      order.push(key)\n    }\n    testorder[key] = {\n      visited: false,\n      ready: false,\n      finished: false,\n      name: flowpoints[key].name,\n      outputs: flowpoints[key].outputs,\n      inputs: flowpoints[key].inputs\n    }\n  })\n  inps.map(testkey => {\n    testorder[testkey].visited = true\n    testorder[testkey].ready = true\n  })\n  return recgetOrdered(testorder, order, inps[0] ? inps[0] : Object.keys(flowpoints)[0], 0)\n}\n\nexport function getInputs(flowpoints) {\n  var inps = []\n  Object.keys(flowpoints).map(testkey => {\n    if (flowpoints[testkey].flowtype.includes('input')) {\n      inps.push(testkey)\n    }\n  })\n  return inps\n}\n","import React from 'react';\n\nimport { getFlowCodeName, isDownStream } from './CommonTools'\n\nfunction getLastUser(testorder, targetkey, order) {\n  var maxIndex = -1\n  order.map((testkey, index) => {\n    if (testorder[testkey].inputs.includes(targetkey)) {\n      maxIndex = Math.max(maxIndex, index)\n    }\n  })\n  return order[maxIndex]\n}\n\nexport function getStateNames(flowpoints, order) {\n  var statenames = {}\n  var init_states = []\n  order.map(key => {\n    const point = flowpoints[key]\n    if (!(key in statenames)){\n      statenames[key] = getFlowCodeName(flowpoints, key)\n      if (!flowpoints[key].flowtype.includes('input')) {\n        if (!init_states.includes(statenames[key])) {\n          init_states.push(key)\n          statenames[key] = 'self.state_' + statenames[key]\n        }\n      }\n    }\n    const lastUser = getLastUser(flowpoints, key, order)\n    if (lastUser) {\n      statenames[lastUser] = statenames[key]\n    }\n  })\n  return statenames\n}\n","import React from 'react';\n\nimport { getInitials } from './Initials'\nimport { getConstructor } from './Constructor'\nimport { getOrdered, getInputs } from './FlowOrder'\nimport { getStateNames } from './FlowStateNames'\nimport { getForward } from './Forward'\nimport { getFitStep, getValidationStep } from './Step'\nimport { getFit } from './Fit'\nimport { getPlotHist } from './PlotHist'\nimport { getSaveLoad } from './SaveLoad'\n\nexport function parseFlowPoints(flowpoints) {\n  if (Object.keys(flowpoints).length != 0) {\n    var msg = getInitials()\n    const inps = getInputs(flowpoints)\n    const order = getOrdered(flowpoints, inps)\n    const statenames = getStateNames(flowpoints, order)\n    msg += '\\n' + getConstructor(flowpoints, order, inps, statenames)\n    msg += '\\n' + getForward(flowpoints, order, inps, statenames)\n    msg += '\\n' + getFitStep()\n    msg += '\\n' + getValidationStep()\n    msg += '\\n' + getFit()\n    msg += '\\n' + getPlotHist()\n    msg += '\\n' + getSaveLoad(flowpoints, order)\n    msg += '\\n\\n'\n  } else {\n    var msg = 'Nothing yet'\n  }\n  return msg\n}\n","import React from 'react';\n\nfunction getWelcome() {\n  var msg = '# Created with https://mariusbrataas.github.io/flowpoints_ml/\\n'\n  return msg\n}\n\nfunction getImports() {\n  var msg = '\\n# Importing torch tools'\n  msg += '\\nimport torch'\n  msg += '\\nfrom torch import nn, optim, cuda'\n  msg += '\\n\\n# Importing other libraries'\n  msg += '\\nimport numpy as np'\n  msg += '\\nimport matplotlib.pyplot as plt'\n  msg += '\\nimport time'\n  return msg\n}\n\nexport function getInitials() {\n  return getWelcome() + getImports()\n}\n","import React from 'react';\n\nimport { getFlowCodeName } from './CommonTools'\n\nexport function getForward(flowpoints, order, inps, statenames) {\n  var last = ''\n  var msg = '\\n    def forward(self'\n  inps.map(key => {\n    msg += ', ' + statenames[key]\n  })\n  msg += '):'\n  order.map(key => {\n    if (!flowpoints[key].flowtype.includes('input')) {\n      const point = flowpoints[key]\n      last = statenames[key]\n      msg += '\\n        ' + statenames[key] + ' = ' + 'self.' + getFlowCodeName(flowpoints, key) + '('\n      point.inputs.map((inpkey, index) => {\n        if (index > 0) {\n          msg += ' + '\n        }\n        msg += statenames[inpkey]\n      })\n      msg += ') # '\n      if (point.flowtype in point.layertypes) {\n        msg += point.layertypes[point.flowtype].ref.replace('nn.', '')\n      } else {\n        msg += point.activationtypes[point.flowtype].ref.replace('nn.', '')\n      }\n    }\n  })\n  msg += '\\n        # Updating state and returning'\n  msg += '\\n        self.state = ' + last\n  msg += '\\n        return self.state'\n  return msg\n}\n","import React, { Component } from 'react';\n\nimport { getFlowCodeName } from './CommonTools'\n\nexport function getSaveLoad(flowpoints, order) {\n  var msg = \"\\n    def save(self, name='model.pth'):\"\n  msg += \"\\n        if not '.pth' in name: name += '.pth'\"\n  msg += \"\\n        torch.save({\"\n  order.map(key => {\n    const point = flowpoints[key]\n    if (!point.flowtype.includes('input')) {\n      const pointcode = getFlowCodeName(flowpoints, key)\n      msg += \"\\n            '\" + pointcode + \"': self.\" + pointcode + ','\n    }\n  })\n  msg += \"\\n            'train_loss': self.train_loss,\"\n  msg += \"\\n            'valid_loss': self.valid_loss,\"\n  msg += \"\\n            'train_loss_hist': self.train_loss_hist,\"\n  msg += \"\\n            'valid_loss_hist': self.valid_loss_hist,\"\n  msg += \"\\n            'optim_type': self.optim_type,\"\n  msg += \"\\n            'learn_rate': self.learn_rate,\"\n  msg += \"\\n            'criterion': self.criterion,\"\n  msg += \"\\n            'use_cuda': self.use_cuda\"\n  msg += \"\\n        }, name)\"\n  msg += \"\\n\\n    @staticmethod\"\n  msg += \"\\n    def load(name='model.pth'):\"\n  msg += \"\\n        if not '.pth' in name: name += '.pth'\"\n  msg += \"\\n        checkpoint = torch.load(name)\"\n  msg += \"\\n        model = neural_net(\"\n  msg += \"\\n            optimizer  = checkpoint['optim_type'],\"\n  msg += \"\\n            learn_rate = checkpoint['learn_rate'],\"\n  msg += \"\\n            criterion  = checkpoint['criterion'],\"\n  msg += \"\\n            use_cuda   = checkpoint['use_cuda']\"\n  msg += \"\\n        )\"\n  order.map(key => {\n    const point = flowpoints[key]\n    if (!point.flowtype.includes('input')) {\n      const pointcode = getFlowCodeName(flowpoints, key)\n      msg += \"\\n        model.\" + pointcode + \" = checkpoint['\" + pointcode + \"']\"\n    }\n  })\n  msg += \"\\n        model.train_loss = checkpoint['train_loss']\"\n  msg += \"\\n        model.valid_loss = checkpoint['valid_loss']\"\n  msg += \"\\n        model.train_loss_hist = checkpoint['train_loss_hist']\"\n  msg += \"\\n        model.valid_loss_hist = checkpoint['valid_loss_hist']\"\n  msg += '\\n        model.startup_routines()'\n  msg += \"\\n        return model\"\n  return msg\n}\n","import React, { Component } from 'react';\n\nimport Paper from '@material-ui/core/Paper';\n\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { github } from 'react-syntax-highlighter/dist/styles/hljs';\n\nimport { parseFlowPoints } from './Flowparser.js'\n\nexport const Codepaper = (props) => {\n  if (props.settings.showPaper) {\n    return (\n      <div style={{position:'fixed', bottom:75, right:10, width:'35%', zIndex:5}}>\n        <Paper elevation={2} style={{background:'#f8f8f8'}}>\n          <div style={{maxHeight:'81vh',overflowY:'scroll'}}>\n            <SyntaxHighlighter\n              language='python'\n              style={github}>\n              {\n                parseFlowPoints(props.flowpoints)\n              }\n            </SyntaxHighlighter>\n          </div>\n        </Paper>\n      </div>\n    )\n  }\n  return null\n}\n","import React, { Component } from 'react';\n\nimport Fab from '@material-ui/core/Fab';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '@material-ui/icons/Add';\nimport CodeIcon from '@material-ui/icons/Code';\nimport SaveIcon from '@material-ui/icons/Save';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ZoomInIcon from '@material-ui/icons/ZoomIn';\nimport ZoomOutIcon from '@material-ui/icons/ZoomOut';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport copy from 'copy-to-clipboard';\n\nimport { parseFlowPoints } from '../flowparser/Flowparser'\n\nfunction LayerTypes() {\n  return {\n    linear: {\n      title: 'Linear',\n      ref: 'nn.Linear',\n      id: 0,\n      params: {\n        in_features: { type: 'int', current: 1},\n        out_features: { type: 'int', current: 1},\n        bias: { type: 'bool', current: 'True'}\n      },\n      outshape: (inp, p) => {\n        var idx = 0\n        var out_shape = inp.map((val, index) => {\n          idx = index\n          return val\n        })\n        out_shape[idx] = p.out_features.current\n        return out_shape\n      },\n      autoparams: (inp, p) => {\n        p.in_features.current = inp[inp.length-1]\n        return p\n      },\n    },\n    flatten: {\n      title: 'Flatten',\n      ref: 'Flatten',\n      id: 1,\n      params: {},\n      outshape: (inp, p) => {\n        var features = 1/inp[0]\n        inp.map(val => {features *= val})\n        return [inp[0], Math.round(features)]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    conv1d: {\n      title: 'Conv1d',\n      ref: 'nn.Conv1d',\n      id: 2,\n      params: {\n        in_channels: { type: 'int', current: 1 },\n        out_channels: { type: 'int', current: 1 },\n        kernel_size: { type: 'tuple', current: [3] },\n        stride: { type: 'tuple', current: [1] },\n        padding: { type: 'tuple', current: [0] },\n        dilation: { type: 'tuple', current: [1] },\n        groups: { type: 'int', current: 1 },\n        bias: { type: 'bool', current: 'True' }\n      },\n      outshape: (inp, p) => {\n        const L_in = inp[2]\n        const L_out = Math.floor(1 + (L_in + 2 * p.padding.current[0] - p.dilation.current[0] * (p.kernel_size.current[0] - 1) - 1) / p.stride.current[0])\n        return [inp[0], p.out_channels.current.current, L_out]\n      },\n      autoparams: (inp, p) => {\n        p.in_channels.current = inp[1]\n        return p\n      }\n    },\n    conv2d: {\n      title: 'Conv2d',\n      ref: 'nn.Conv2d',\n      id: 3,\n      params: {\n        in_channels: { type: 'int', current: 1 },\n        out_channels: { type: 'int', current: 1 },\n        kernel_size: { type: 'tuple', current: [3, 3] },\n        stride: { type: 'tuple', current: [1, 1] },\n        padding: { type: 'tuple', current: [0, 0] },\n        dilation: { type: 'tuple', current: [1, 1] },\n        groups: { type: 'int', current: 1 },\n        bias: { type: 'bool', current: 'True' }\n      },\n      outshape: (inp, p) => {\n        const H_in = inp[2]\n        const W_in = inp[3]\n        const H_out = Math.floor(1 + (H_in + 2 * p.padding.current[0] - p.dilation.current[0] * (p.kernel_size.current[0] - 1) - 1) / p.stride.current[0])\n        const W_out = Math.floor(1 + (W_in + 2 * p.padding.current[1] - p.dilation.current[1] * (p.kernel_size.current[1] - 1) - 1) / p.stride.current[1])\n        return [inp[0], p.out_channels.current, H_out, W_out]\n      },\n      autoparams: (inp, p) => {\n        p.in_channels.current = inp[1]\n        return p\n      }\n    },\n    conv3d: {\n      title: 'Conv3d',\n      ref: 'nn.Conv3d',\n      id: 4,\n      params: {\n        in_channels: { type: 'int', current: 1 },\n        out_channels: { type: 'int', current: 1 },\n        kernel_size: { type: 'tuple', current: [3, 3, 3] },\n        stride: { type: 'tuple', current: [1, 1, 1] },\n        padding: { type: 'tuple', current: [0, 0, 0] },\n        dilation: { type: 'tuple', current: [1, 1, 1] },\n        groups: { type: 'int', current: 1 },\n        bias: { type: 'bool', current: 'True' }\n      },\n      outshape: (inp, p) => {\n        const D_in = inp[2]\n        const H_in = inp[3]\n        const W_in = inp[4]\n        const D_out = Math.floor(1 + (D_in + 2 * p.padding.current[0] - p.dilation.current[0] * (p.kernel_size.current[0] - 1) - 1) / p.stride.current[0])\n        const H_out = Math.floor(1 + (H_in + 2 * p.padding.current[1] - p.dilation.current[1] * (p.kernel_size.current[1] - 1) - 1) / p.stride.current[1])\n        const W_out = Math.floor(1 + (W_in + 2 * p.padding.current[2] - p.dilation.current[2] * (p.kernel_size.current[2] - 1) - 1) / p.stride.current[2])\n        return [inp[0], p.out_channels.current, D_out, H_out, W_out]\n      },\n      autoparams: (inp, p) => {\n        p.in_channels.current = inp[1]\n        return p\n      }\n    },\n    maxpool1d: {\n      title: 'MaxPool1d',\n      ref: 'nn.MaxPool1d',\n      id: 5,\n      params: {\n        kernel_size: { type: 'int', current: 3 },\n        stride: { type: 'int', current: 1 },\n        padding: { type: 'int', current: 0 },\n        dilation: { type: 'int', current: 1 },\n        return_indices: { type: 'bool', current: 'False' },\n        ceil_mode: { type: 'bool', current: 'False' }\n      },\n      outshape: (inp, p) => {\n        const L_in = inp[2]\n        const L_out = Math.floor(1 + (L_in + 2 * p.padding.current[0] - p.dilation.current[0] * (p.kernel_size.current[0] - 1) - 1) / p.stride.current[0])\n        return [inp[0], inp[0], L_out]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    maxpool2d: {\n      title: 'MaxPool2d',\n      ref: 'nn.MaxPool2d',\n      id: 6,\n      params: {\n        kernel_size: { type: 'tuple', current: [3, 3] },\n        stride: { type: 'tuple', current: [1, 1] },\n        padding: { type: 'tuple', current: [0, 0] },\n        dilation: { type: 'tuple', current: [1, 1] },\n        return_indices: { type: 'bool', current: 'False' },\n        ceil_mode: { type: 'bool', current: 'False' }\n      },\n      outshape: (inp, p) => {\n        const H_in = inp[2]\n        const W_in = inp[3]\n        const H_out = Math.floor(1 + (H_in + 2 * p.padding.current[0] - p.dilation.current[0] * (p.kernel_size.current[0] - 1) - 1) / p.stride.current[0])\n        const W_out = Math.floor(1 + (W_in + 2 * p.padding.current[1] - p.dilation.current[1] * (p.kernel_size.current[1] - 1) - 1) / p.stride.current[1])\n        return [inp[0], inp[1], H_out, W_out]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    maxpool3d: {\n      title: 'MaxPool3d',\n      ref: 'nn.MaxPool3d',\n      id: 7,\n      params: {\n        kernel_size: { type: 'tuple', current: [3, 3, 3] },\n        stride: { type: 'tuple', current: [1, 1, 1] },\n        padding: { type: 'tuple', current: [0, 0, 0] },\n        dilation: { type: 'tuple', current: [1, 1, 1] },\n        return_indices: { type: 'bool', current: 'False' },\n        ceil_mode: { type: 'bool', current: 'False' }\n      },\n      outshape: (inp, p) => {\n        const D_in = inp[2]\n        const H_in = inp[3]\n        const W_in = inp[4]\n        const D_out = Math.floor(1 + (D_in + 2 * p.padding.current[0] - p.dilation.current[0] * (p.kernel_size.current[0] - 1) - 1) / p.stride.current[0])\n        const H_out = Math.floor(1 + (H_in + 2 * p.padding.current[1] - p.dilation.current[1] * (p.kernel_size.current[1] - 1) - 1) / p.stride.current[1])\n        const W_out = Math.floor(1 + (W_in + 2 * p.padding.current[2] - p.dilation.current[2] * (p.kernel_size.current[2] - 1) - 1) / p.stride.current[2])\n        return [inp[0], inp[1], D_out, H_out, W_out]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    batchnorm1d: {\n      title: 'BatchNorm1d',\n      ref: 'nn.BatchNorm1d',\n      id: 8,\n      params: {\n        num_features: { type: 'int', current: 1 },\n        eps: { type: 'double', current: 1e-5 },\n        momentum: { type: 'double', current: 0.1 },\n        affine: { type: 'bool', current: 'True' },\n        track_running_stats: { type: 'bool', current: 'True' }\n      },\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        p.num_features.current = inp[1]\n        return p\n      }\n    },\n    batchnorm2d: {\n      title: 'BatchNorm2d',\n      ref: 'nn.BatchNorm2d',\n      id: 9,\n      params: {\n        num_features: { type: 'int', current: 1 },\n        eps: { type: 'double', current: 1e-5 },\n        momentum: { type: 'double', current: 0.1 },\n        affine: { type: 'bool', current: 'True' },\n        track_running_stats: { type: 'bool', current: 'True' }\n      },\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        p.num_features.current = inp[1]\n        return p\n      }\n    },\n    batchnorm3d: {\n      title: 'BatchNorm3d',\n      ref: 'nn.BatchNorm3d',\n      id: 10,\n      params: {\n        num_features: { type: 'int', current: 1 },\n        eps: { type: 'double', current: 1e-5 },\n        momentum: { type: 'double', current: 0.1 },\n        affine: { type: 'bool', current: 'True' },\n        track_running_stats: { type: 'bool', current: 'True' }\n      },\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        p.num_features.current = inp[1]\n        return p\n      }\n    },\n    groupnorm: {\n      title: 'GroupNorm',\n      ref: 'nn.GroupNorm',\n      id: 11,\n      params: {\n        num_groups: { type: 'int', current: 1 },\n        num_channels: { type: 'int', current: 1 },\n        eps: { type: 'double', current: 1e-5 },\n        affine: { type: 'bool', current: 'True' }\n      },\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        p.num_channels.current = inp[1]\n        return p\n      }\n    },\n    instancenorm1d: {\n      title: 'InstanceNorm1d',\n      ref: 'nn.InstanceNorm1d',\n      id: 12,\n      params: {\n        num_features: { type: 'int', current: 1 },\n        eps: { type: 'double', current: 1e-5 },\n        momentum: { type: 'double', current: 0.1 },\n        affine: { type: 'bool', current: 'False' },\n        track_running_stats: { type: 'bool', current: 'False' }\n      },\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        p.num_features.current = inp[1]\n        return p\n      }\n    },\n    instancenorm2d: {\n      title: 'InstanceNorm2d',\n      ref: 'nn.InstanceNorm2d',\n      id: 13,\n      params: {\n        num_features: { type: 'int', current: 1 },\n        eps: { type: 'double', current: 1e-5 },\n        momentum: { type: 'double', current: 0.1 },\n        affine: { type: 'bool', current: 'False' },\n        track_running_stats: { type: 'bool', current: 'False' }\n      },\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        p.num_features.current = inp[1]\n        return p\n      }\n    },\n    instancenorm3d: {\n      title: 'InstanceNorm3d',\n      ref: 'nn.InstanceNorm3d',\n      id: 14,\n      params: {\n        num_features: { type: 'int', current: 1 },\n        eps: { type: 'double', current: 1e-5 },\n        momentum: { type: 'double', current: 0.1 },\n        affine: { type: 'bool', current: 'False' },\n        track_running_stats: { type: 'bool', current: 'False' }\n      },\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        p.num_features.current = inp[1]\n        return p\n      }\n    },\n    rnn: {\n      title: 'RNN',\n      ref: 'nn.RNN',\n      id: 15,\n      params: {\n        input_size: { type: 'int', current: 1 },\n        hidden_size: { type: 'int', current: 1 },\n        num_layers: { type: 'int', current: 1 },\n        nonlinearity: { type: 'select', options:['relu', 'tanh'], current: 'tanh' },\n        bias: { type: 'bool', current: 'True' },\n        batch_first: { type: 'bool', current: 'False' },\n        dropout: { type: 'double', current: 0 },\n        bidirectional: { type: 'bool', current: 'False' },\n      },\n      outshape: (inp, p) => {\n        var idx = 0\n        var out_shape = inp.map((val, index) => {\n          idx = index\n          return val\n        })\n        out_shape[idx] = p.hidden_size.current\n        return out_shape\n      },\n      autoparams: (inp, p) => {\n        p.input_size.current = inp[inp.length-1]\n        return p\n      }\n    },\n    lstm: {\n      title: 'LSTM',\n      ref: 'nn.LSTM',\n      id: 16,\n      params: {\n        input_size: { type: 'int', current: 1 },\n        hidden_size: { type: 'int', current: 1 },\n        num_layers: { type: 'int', current: 1 },\n        bias: { type: 'bool', current: 'True' },\n        batch_first: { type: 'bool', current: 'False' },\n        dropout: { type: 'double', current: 0 },\n        bidirectional: { type: 'bool', current: 'False' },\n      },\n      outshape: (inp, p) => {\n        var idx = 0\n        var out_shape = inp.map((val, index) => {\n          idx = index\n          return val\n        })\n        out_shape[idx] = p.hidden_size.current\n        return out_shape\n      },\n      autoparams: (inp, p) => {\n        p.input_size.current = inp[inp.length-1]\n        return p\n      }\n    },\n    gru: {\n      title: 'GRU',\n      ref: 'nn.GRU',\n      id: 17,\n      params: {\n        input_size: { type: 'int', current: 1 },\n        hidden_size: { type: 'int', current: 1 },\n        num_layers: { type: 'int', current: 1 },\n        bias: { type: 'bool', current: 'True' },\n        batch_first: { type: 'bool', current: 'False' },\n        dropout: { type: 'double', current: 0 },\n        bidirectional: { type: 'bool', current: 'False' },\n      },\n      outshape: (inp, p) => {\n        var idx = 0\n        var out_shape = inp.map((val, index) => {\n          idx = index\n          return val\n        })\n        out_shape[idx] = p.hidden_size.current\n        return out_shape\n      },\n      autoparams: (inp, p) => {\n        p.input_size.current = inp[inp.length-1]\n        return p\n      }\n    },\n    rnncell: {\n      title: 'RNNCell',\n      ref: 'nn.RNNCell',\n      id: 18,\n      params: {\n        input_size: { type: 'int', current: 1 },\n        hidden_size: { type: 'int', current: 1 },\n        bias: { type: 'bool', current: 'True' },\n        nonlinearity: { type: 'select', options:['relu', 'tanh'], current: 'tanh' },\n      },\n      outshape: (inp, p) => {\n        var idx = 0\n        var out_shape = inp.map((val, index) => {\n          idx = index\n          return val\n        })\n        out_shape[idx] = p.hidden_size.current\n        return out_shape\n      },\n      autoparams: (inp, p) => {\n        p.input_size.current = inp[inp.length-1]\n        return p\n      }\n    },\n    lstmcell: {\n      title: 'LSTMCell',\n      ref: 'nn.LSTMCell',\n      id: 19,\n      params: {\n        input_size: { type: 'int', current: 1 },\n        hidden_size: { type: 'int', current: 1 },\n        bias: { type: 'bool', current: 'True' },\n      },\n      outshape: (inp, p) => {\n        var idx = 0\n        var out_shape = inp.map((val, index) => {\n          idx = index\n          return val\n        })\n        out_shape[idx] = p.hidden_size.current\n        return out_shape\n      },\n      autoparams: (inp, p) => {\n        p.input_size.current = inp[inp.length-1]\n        return p\n      }\n    },\n    grucell: {\n      title: 'GRUCell',\n      ref: 'nn.GRUCell',\n      id: 20,\n      params: {\n        input_size: { type: 'int', current: 1 },\n        hidden_size: { type: 'int', current: 1 },\n        bias: { type: 'bool', current: 'True' },\n      },\n      outshape: (inp, p) => {\n        var idx = 0\n        var out_shape = inp.map((val, index) => {\n          idx = index\n          return val\n        })\n        out_shape[idx] = p.hidden_size.current\n        return out_shape\n      },\n      autoparams: (inp, p) => {\n        p.input_size.current = inp[inp.length-1]\n        return p\n      }\n    },\n    dropout: {\n      title: 'Dropout',\n      ref: 'nn.Dropout',\n      id: 21,\n      params: {\n        p: { type: 'double', current: 0.5 },\n        inplace: { type: 'bool', current: 'False' }\n      },\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    dropout2d: {\n      title: 'Dropout2d',\n      ref: 'nn.Dropout2d',\n      id: 22,\n      params: {\n        p: { type: 'double', current: 0.5 },\n        inplace: { type: 'bool', current: 'False' }\n      },\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    dropout3d: {\n      title: 'Dropout3d',\n      ref: 'nn.Dropout3d',\n      id: 23,\n      params: {\n        p: { type: 'double', current: 0.5 },\n        inplace: { type: 'bool', current: 'False' }\n      },\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    alphadropout: {\n      title: 'AlphaDropout',\n      ref: 'nn.AlphaDropout',\n      id: 24,\n      params: {\n        p: { type: 'double', current: 0.5 },\n        inplace: { type: 'bool', current: 'False' }\n      },\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n  }\n}\n\nfunction ActivationTypes() {\n  return {\n    elu: {\n      title: 'ELU',\n      ref: 'nn.ELU',\n      id: 25,\n      params: {\n        alpha: { type: 'double', current: 1 },\n        inplace: { type: 'bool', current: 'False' }\n      },\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    hardshrink: {\n      title: 'Hardshrink',\n      ref: 'nn.Hardshrink',\n      id: 26,\n      params: {\n        lambd: { type: 'double', current: '0.5' },\n      },\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    hardtanh: {\n      title: 'Hardtanh',\n      ref: 'nn.Hardtanh',\n      id: 27,\n      params: {\n        min_val: { type: 'double', current: -1 },\n        max_val: { type: 'double', current: 1 },\n        inplace: { type: 'bool', current: 'False' }\n      },\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    leakyrelu: {\n      title: 'LeakyReLU',\n      ref: 'nn.LeakyReLU',\n      id: 28,\n      params: {\n        negative_slope: { type: 'double', current: 0.01 },\n        inplace: { type: 'bool', current: 'False' }\n      },\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    logsigmoid: {\n      title: 'LogSigmoid',\n      ref: 'nn.LogSigmoid',\n      id: 29,\n      params: {},\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    prelu: {\n      title: 'PReLU',\n      ref: 'nn.PReLU',\n      id: 30,\n      params: {\n        num_parameters: { type: 'int', current: 1 },\n        init: { type: 'double', current: 0.25 }\n      },\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    relu: {\n      title: 'ReLU',\n      ref: 'nn.ReLU',\n      id: 31,\n      params: {\n        inplace: { type: 'bool', current: 'False' }\n      },\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    relu6: {\n      title: 'ReLU6',\n      ref: 'nn.ReLU6',\n      id: 32,\n      params: {\n        inplace: { type: 'bool', current: 'False' }\n      },\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    rrelu: {\n      title: 'RReLU',\n      ref: 'nn.RReLU',\n      id: 33,\n      params: {\n        lower: { type: 'double', current: 1/8 },\n        upper: { type: 'double', current: 1/3 },\n        inplace: { type: 'bool', current: 'False' }\n      },\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    selu: {\n      title: 'SELU',\n      ref: 'nn.SELU',\n      id: 34,\n      params: {\n        inplace: { type: 'bool', current: 'False' }\n      },\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    celu: {\n      title: 'CELU',\n      ref: 'nn.CELU',\n      id: 35,\n      params: {\n        alpha: { type: 'double', current: 1 },\n        inplace: { type: 'bool', current: 'False' }\n      },\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    sigmoid: {\n      title: 'Sigmoid',\n      ref: 'nn.Sigmoid',\n      id: 36,\n      params: {},\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    softplus: {\n      title: 'Softplus',\n      ref: 'nn.Softplus',\n      id: 37,\n      params: {\n        beta: { type: 'double', current: 1 },\n        threshold: { type: 'double', current: 20 }\n      },\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    softshrink: {\n      title: 'Softshrink',\n      ref: 'nn.Softshrink',\n      id: 38,\n      params: {\n        lambd: { type: 'double', current: 0.5 }\n      },\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    softsign: {\n      title: 'Softsign',\n      ref: 'nn.Softsign',\n      id: 39,\n      params: {},\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    tanh: {\n      title: 'Tanh',\n      ref: 'nn.Tanh',\n      id: 40,\n      params: {},\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    tanhshrink: {\n      title: 'Tanhshrink',\n      ref: 'nn.Tanhshrink',\n      id: 41,\n      params: {},\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    threshold: {\n      title: 'Threshold',\n      ref: 'nn.Threshold',\n      id: 42,\n      params: {\n        threshold: { type: 'double', current: 0.1 },\n        value: { type: 'double', current: 0.1 },\n        inplace: { type: 'bool', current: 'False' }\n      },\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    softmin: {\n      title: 'Softmin',\n      ref: 'nn.Softmin',\n      id: 43,\n      params: {\n        dim: { type: 'int', current: -1 }\n      },\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    softmax: {\n      title: 'Softmax',\n      ref: 'nn.Softmax',\n      id: 44,\n      params: {\n        dim: { type: 'int', current: -1 }\n      },\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    softmax2d: {\n      title: 'Softmax2d',\n      ref: 'nn.Softmax2d',\n      id: 45,\n      params: {},\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    logsoftmax: {\n      title: 'LogSoftmax',\n      ref: 'nn.LogSoftmax',\n      id: 46,\n      params: {\n        dim: { type: 'int', current: -1 }\n      },\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n  }\n}\n\nfunction DefaultPointState(key) {\n  return {\n    key: parseInt(key),\n    name: null,\n    openMenu: 'nothing',\n    anchorEl: null,\n    x: 0,\n    y: 0,\n    width: 375,\n    height: 200,\n    inputs: [],\n    outputs: [],\n    gotInput: true,\n    gotOutput: true,\n    isOpen: false,\n    layertypes: LayerTypes(),\n    activationtypes: ActivationTypes(),\n    flowtype:'linear',\n    output_shape: [1,1],\n    input_point_dims: 2\n  }\n}\n\n/*\nPARSING:\n _  =  New flowpoint\n &  =  New flowpoint main param\n ,  =  New param within main\n*/\n\nfunction inputToString(point) {\n  // Default msg contents: [key, name, flowtype_id, outputs, position]\n  var msg = '' + point.key + '&' + (point.name ? point.name : '') + '&i&'\n  var gotKey = false\n  // Adding outputs\n  point.outputs.map(key => {\n    gotKey = true\n    msg += key + ','\n  })\n  if (gotKey) { msg = msg.substring(0, msg.length - 1) }\n  msg += '&'\n  // Adding position\n  msg += Math.round(point.x/10) + ',' + Math.round(point.y/10) + '&'\n  // Adding parameters: output_shape\n  gotKey = false\n  point.output_shape.map(val => {\n    gotKey = true\n    msg += val + ','\n  })\n  if (gotKey) { msg = msg.substring(0, msg.length - 1) }\n  return msg\n}\n\n// key, name, type_id, outputs, params\n\nfunction pointToString(point) {\n  // Getting params\n  var params = null\n  if (point.flowtype in point.layertypes) {\n    params = point.layertypes[point.flowtype]\n  } else {\n    params = point.activationtypes[point.flowtype]\n  }\n  // Default msg contents: [key, name, flowtype_id, outputs, position]\n  var msg = '' + point.key + '&' + (point.name ? point.name : '') + '&' + params.id + '&'\n  var gotKey = false\n  // Adding outputs\n  point.outputs.map(key => {\n    gotKey = true\n    msg += key + ','\n  })\n  if (gotKey) { msg = msg.substring(0, msg.length - 1) }\n  msg += '&'\n  // Adding position\n  msg += Math.round(point.x/10) + ',' + Math.round(point.y/10) + '&'\n  // Adding parameters\n  gotKey = false\n  Object.keys(params.params).sort().map((paramkey, idx) => {\n    gotKey = true\n    switch (params.params[paramkey].type) {\n      case 'bool':\n        msg += params.params[paramkey].current.includes('True') ? '1,' : '0,'\n        break;\n      case 'tuple':\n        params.params[paramkey].current.map(val => {\n          msg += val + ';'\n        })\n        msg = msg.substring(0, msg.length - 1) + ','\n        break;\n      default:\n        msg += params.params[paramkey].current + ','\n    }\n  })\n  if (gotKey) { msg = msg.substring(0, msg.length - 1) }\n  return msg\n}\n\n\n// Default msg contents: [key, name, flowtype_id, outputs, position]\nfunction parsePoint(msg) {\n  var newpoint = DefaultPointState(0)\n  const mainparams = msg.split('&')\n  newpoint.key = parseInt(mainparams[0])\n  newpoint.name = mainparams[1]\n  // Setting flow type\n  if (mainparams[2].includes('i')) {\n    newpoint.flowtype = 'input'\n  } else {\n    const raw_type = parseInt(mainparams[2])\n    var done = false\n    var params = null\n    Object.keys(newpoint.layertypes).map(t_key => {\n      if (!done && (raw_type === newpoint.layertypes[t_key].id)) {\n        done = true\n        newpoint.flowtype = t_key.toString()\n        params = newpoint.layertypes[newpoint.flowtype]\n      }\n    })\n    Object.keys(newpoint.activationtypes).map(t_key => {\n      if (!done && (raw_type === newpoint.activationtypes[t_key].id)) {\n        done = true\n        newpoint.flowtype = t_key.toString()\n        params = newpoint.activationtypes[newpoint.flowtype]\n      }\n    })\n  }\n  // Adding outputs\n  mainparams[3].split(',').map(val => {\n    if (!('').includes(val)) {\n      newpoint.outputs.push(parseInt(val))\n    }\n  })\n  // Adding position\n  newpoint.x = parseInt(mainparams[4].split(',')[0]) * 10\n  newpoint.y = parseInt(mainparams[4].split(',')[1]) * 10\n  // Adding parameters\n  if (newpoint.flowtype.includes('input')) {\n    newpoint.output_shape = []\n    mainparams[5].split(',').map(val => {\n      newpoint.output_shape.push(parseInt(val))\n    })\n    newpoint.input_point_dims = newpoint.output_shape.length\n  } else {\n    var raw_params = mainparams[5].split(',')\n    Object.keys(params.params).sort().map((paramkey, idx) => {\n      switch (params.params[paramkey].type) {\n        case 'bool':\n          params.params[paramkey].current = (parseInt(raw_params[idx]) === 1) ? 'True' : 'False'\n          break;\n        case 'double':\n          params.params[paramkey].current = parseFloat(raw_params[idx])\n          break;\n        case 'tuple':\n          params.params[paramkey].current = []\n          raw_params[idx].split(';').map(val => {\n            params.params[paramkey].current.push(parseInt(val))\n          })\n          break;\n        default: params.params[paramkey].current = parseInt(raw_params[idx])\n      }\n    })\n  }\n  return newpoint\n}\n\nexport function parse_url(msg) {\n  var flowpoints = {}\n  msg.split('_').map(pointmsg => {\n    var newpoint = parsePoint(pointmsg)\n    flowpoints[newpoint.key] = newpoint\n  })\n  Object.keys(flowpoints).map(key => {\n    key = parseInt(key)\n    flowpoints[key].outputs.map(outkey => {\n      outkey = parseInt(outkey)\n      if (!flowpoints[outkey].inputs.includes(key)) {\n        flowpoints[outkey].inputs.push(key)\n      }\n    })\n  })\n  return flowpoints\n}\n\nexport function gen_url(flowpoints, order) {\n  var msg = ''\n  order.map(key => {\n    if (flowpoints[key].flowtype.includes('input')) {\n      msg += inputToString(flowpoints[key]) + '_'\n    } else {\n      msg += pointToString(flowpoints[key]) + '_'\n    }\n  })\n  return msg.substring(0, msg.length - 1)\n}\n\nexport const AppBottom = (props) => {\n  const snapX = props.snapX || 25\n  const snapY = props.snapY || 25\n  const settings = props.refresh().settings\n  return (\n    <div>\n      <div style={{position:'fixed', bottom:0, left:0, padding:'5px', paddingRight:'30px'}}>\n        <Tooltip title='Zoom in'>\n          <IconButton\n            onClick={() => {\n              var settings = props.refresh().settings\n              settings.zoom = Math.min(1.5, Math.max(0.5, settings.zoom + 0.1))\n              props.updateSettings(settings)\n            }}>\n            <ZoomInIcon/>\n          </IconButton>\n        </Tooltip>\n        <Tooltip title='Zoom out'>\n          <IconButton\n            onClick={() => {\n              var settings = props.refresh().settings\n              settings.zoom = Math.min(1.5, Math.max(0.5, settings.zoom - 0.1))\n              props.updateSettings(settings)\n            }}>\n            <ZoomOutIcon/>\n          </IconButton>\n        </Tooltip>\n      </div>\n        <div style={{position:'fixed', bottom:0, right:0, padding:'10px', paddingLeft:'30px'}}>\n        <Tooltip title=\"Add\">\n          <Fab\n            style={{background:'#00a8ff', color:'#ffffff'}}\n            aria-label=\"Add\"\n            onClick={() => {\n              var state = props.refresh()\n              var flowpoints = state.flowpoints\n              var settings = state.settings\n              var newpoint = DefaultPointState(settings.count)\n              const snapX = settings.snapX\n              const snapY = settings.snapY\n              newpoint.x = props.lastPosX + (Object.keys(flowpoints).length > 0 ? snapX : 0)\n              newpoint.y = props.lastPosY\n              if (Object.keys(flowpoints).length == 0) {\n                newpoint.gotInput = false\n                newpoint.flowtype = 'input'\n              }\n              props.updateLastPos(newpoint.x, newpoint.y)\n              flowpoints[settings.count] = newpoint\n              settings.count += 1\n              props.updateView(flowpoints, settings)\n            }}>\n            <AddIcon />\n          </Fab>\n        </Tooltip>{' '}\n        <Tooltip title=\"Show/hide code\">\n          <Fab\n            style={{background:'#00ed3f', color:'white'}}\n            aria-label=\"Add\"\n            onClick={() => {\n              var settings = props.refresh().settings\n              settings.showPaper ^= true\n              props.updateSettings(settings)\n            }}>\n            <CodeIcon />\n          </Fab>\n        </Tooltip>{' '}\n        <Tooltip title=\"Copy code\">\n          <Fab\n            style={{background:'#bfbfbf', color:'black'}}\n            aria-label=\"Add\"\n            onClick={() => {\n              copy(parseFlowPoints(props.refresh().flowpoints))\n              var settings = props.refresh().settings\n              settings.snackbarMsg = 'Copied code to clipboard'\n              settings.showSnackbar = true\n              props.updateSettings(settings)\n            }}>\n            <SaveIcon />\n          </Fab>\n        </Tooltip>{'  '}\n      </div>\n    </div>\n  )\n}\n\n/*\n<Tooltip title=\"Share link\">\n  <Fab\n    style={{background:'#7700ff', color:'white'}}\n    aria-label=\"Share\"\n    onClick={() => {\n      // 'https://mariusbrataas.github.io/torchflow/?p='\n      copy('localhost:3000/' + 'load?' + gen_url(props.refresh().flowpoints, props.order))\n      var settings = props.refresh().settings\n      settings.snackbarMsg = 'Copied link to clipboard'\n      settings.showSnackbar = true\n      props.updateSettings(settings)\n    }}>\n    <ShareIcon />\n  </Fab>\n</Tooltip>\n\n*/\n","import React, { Component } from 'react';\n\nexport const DrawConnections = (props) => {\n  const flowpoints = props.flowpoints\n  var connections = []\n  Object.keys(flowpoints).map((key1) => {\n    const point1 = flowpoints[key1]\n    if (point1) {\n      point1.outputs.map((key2) => {\n        const point2 = flowpoints[key2]\n        const x1 = point1.x + point1.width - 35\n        const y1 = point1.y + 22\n        const x2 = point2.x + 15\n        const y2 = point2.y + 22\n        const bezierOffset = 100\n        connections.push(\n          <path\n            d={'M' + x1 + ',' + y1 +\n              'C' + (x1+bezierOffset) + ',' + y1 + ' ' + (x2-bezierOffset) + ',' + y2 + ' ' +\n              (x2-0.0001) + ',' + (y2-0.0001)}\n            fill=\"none\"\n            stroke={x1 < x2 ? 'url(#grad1)' : 'url(#grad2)'}\n            strokeWidth={3}\n          />\n        )\n      })\n    }\n  })\n  return (\n    <svg style={{width:'100%', height:'100%', position:'absolute', overflow:'visible'}}>\n      <linearGradient id=\"grad1\" x1=\"0\" y1=\"0\" x2=\"1\" y2=\"0\">\n        <stop offset=\"0\" stop-color='#6e00ff' />\n        <stop offset=\"1\" stop-color='#00e9ff' />\n      </linearGradient>\n      <linearGradient id=\"grad2\" x1=\"1\" y1=\"0\" x2=\"0\" y2=\"0\">\n        <stop offset=\"0\" stop-color='#6e00ff' />\n        <stop offset=\"1\" stop-color='#00e9ff' />\n      </linearGradient>\n      {\n        connections\n      }\n    </svg>\n  )\n}\n","import React from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport Divider from '@material-ui/core/Divider';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst FlowpointParams = (props) => {\n  const localState = props.localState\n  var params = null\n  if (localState.flowtype in localState.layertypes) {\n    params = localState.layertypes[localState.flowtype]\n  } else {\n    params = localState.activationtypes[localState.flowtype]\n  }\n  if (params) {\n    params = params.params\n    return (\n      <div>\n        <div className='card-contents'>\n          <form\n            noValidate\n            autoComplete=\"off\"\n            onSubmit={(e) => {e.preventDefault()}}>\n            <TextField\n              label=\"Name\"\n              margin='none'\n              style={{marginTop:'10px', width:'90%'}}\n              value={localState.name}\n              onChange={(e) => {\n                var flowpoints = props.refresh().flowpoints\n                var myState = flowpoints[localState.key]\n                myState.name = e.target.value;\n                props.updateFlowpoints(flowpoints)\n              }}\n            />\n          </form>\n        </div>\n        <div style={{marginTop:'10px'}}>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            Parameters\n          </Typography>\n          {\n            Object.keys(params).map(paramkey => {\n              if (params[paramkey].type.includes('int')) {\n                return (\n                  <TextField\n                    label={paramkey}\n                    value={params[paramkey].current != 0 ? params[paramkey].current : null}\n                    onChange={(e) => {\n                      var flowpoints = props.refresh().flowpoints\n                      var myState = flowpoints[localState.key]\n                      if (myState.flowtype in myState.layertypes) {\n                        myState.layertypes[myState.flowtype].params[paramkey].current = Math.round(e.target.value)\n                      } else {\n                        myState.activationtypes[myState.flowtype].params[paramkey].current = Math.round(e.target.value)\n                      }\n                      props.updateFlowpoints(flowpoints)\n                    }}\n                    type=\"number\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    style={{width:'100px', paddingRight:'5px'}}/>\n                )\n              }\n            })\n          }\n          {\n            Object.keys(params).map(paramkey => {\n              if (params[paramkey].type.includes('double')) {\n                return (\n                  <TextField\n                    label={paramkey}\n                    value={params[paramkey].current != 0 ? params[paramkey].current : null}\n                    onChange={(e) => {\n                      var flowpoints = props.refresh().flowpoints\n                      var myState = flowpoints[localState.key]\n                      if (myState.flowtype in myState.layertypes) {\n                        myState.layertypes[myState.flowtype].params[paramkey].current = e.target.value\n                      } else {\n                        myState.activationtypes[myState.flowtype].params[paramkey].current = e.target.value\n                      }\n                      props.updateFlowpoints(flowpoints)\n                    }}\n                    type=\"number\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    style={{width:'100px', paddingRight:'5px'}}/>\n                )\n              }\n            })\n          }\n        </div>\n        <div>\n          {\n            Object.keys(params).map(paramkey => {\n              if (params[paramkey].type.includes('tuple')) {\n                return (\n                  <div>\n                    {\n                      params[paramkey].current.map((val, index) => {\n                        return (\n                          <TextField\n                            label={paramkey + ' ' + index}\n                            value={params[paramkey].current[index] != 0 ? params[paramkey].current[index] : null}\n                            onChange={(e) => {\n                              var flowpoints = props.refresh().flowpoints\n                              var myState = flowpoints[localState.key]\n                              if (myState.flowtype in myState.layertypes) {\n                                myState.layertypes[myState.flowtype].params[paramkey].current[index] = Math.round(e.target.value)\n                              } else {\n                                myState.activationtypes[myState.flowtype].params[paramkey].current[index] = Math.round(e.target.value)\n                              }\n                              props.updateFlowpoints(flowpoints)\n                            }}\n                            type=\"number\"\n                            margin=\"dense\"\n                            variant=\"outlined\"\n                            style={{width:'100px', paddingRight:'5px'}}/>\n                        )\n                      })\n                    }\n                  </div>\n                )\n              }\n            })\n          }\n        </div>\n        <div>\n          <FormGroup row>\n          {\n            Object.keys(params).map(paramkey => {\n              if (params[paramkey].type.includes('bool')) {\n                return (\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        checked={params[paramkey].current.includes('True')}\n                        onChange={(e) => {\n                          var flowpoints = props.refresh().flowpoints\n                          var myState = flowpoints[localState.key]\n                          if (myState.flowtype in myState.layertypes) {\n                            var current = myState.layertypes[myState.flowtype].params[paramkey].current\n                            myState.layertypes[myState.flowtype].params[paramkey].current = current.includes('True') ? 'False' : 'True'\n                          } else {\n                            var current = myState.activationtypes[myState.flowtype].params[paramkey].current\n                            myState.activationtypes[myState.flowtype].params[paramkey].current = current.includes('True') ? 'False' : 'True'\n                          }\n                          props.updateFlowpoints(flowpoints)\n                        }}/>\n                    }\n                    label={paramkey}/>\n                )\n              }\n            })\n          }\n          </FormGroup>\n        </div>\n      </div>\n    )\n  } else {\n    if (localState.flowtype.includes('input')) {\n      return (\n        <div>\n          <div className='card-contents'>\n            <form\n              noValidate\n              autoComplete=\"off\"\n              onSubmit={(e) => {e.preventDefault()}}>\n              <TextField\n                label=\"Name\"\n                margin='none'\n                style={{marginTop:'10px', width:'90%'}}\n                value={localState.name}\n                onChange={(e) => {\n                  var flowpoints = props.refresh().flowpoints\n                  var myState = flowpoints[localState.key]\n                  myState.name = e.target.value;\n                  props.updateFlowpoints(flowpoints)\n                }}\n              />\n            </form>\n          </div>\n          <div style={{marginTop:'10px'}}>\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n              Parameters\n            </Typography>\n            <TextField\n              label='Dimensions'\n              value={localState.input_point_dims != 0 ? localState.input_point_dims : null}\n              onChange={(e) => {\n                var flowpoints = props.refresh().flowpoints\n                var myState = flowpoints[localState.key]\n                myState.input_point_dims = Math.min(10, Math.max(0, Math.round(e.target.value)))\n                const diff = myState.input_point_dims - myState.output_shape.length\n                if (diff > 0) {\n                  Array.from(Array(diff).keys()).map((val, index) => {\n                    myState.output_shape.push(1)\n                  })\n                }\n                if (diff < 0) {\n                  const current = myState.output_shape\n                  myState.output_shape = []\n                  Array.from(Array(myState.input_point_dims).keys()).map((val, index) => {\n                    myState.output_shape.push(current[index])\n                  })\n                }\n                flowpoints[localState.key] = myState\n                props.updateFlowpoints(flowpoints)\n              }}\n              type=\"number\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              style={{width:'100px', paddingRight:'5px'}}/>\n            <FormGroup row>\n              {\n                localState.output_shape.map((val, index) => {\n                  return (\n                    <TextField\n                      label={'dim_' + index}\n                      value={val != 0 ? val : null}\n                      onChange={(e) => {\n                        var flowpoints = props.refresh().flowpoints\n                        var myState = flowpoints[localState.key]\n                        myState.output_shape[index] = Math.max(0, Math.round(e.target.value))\n                        props.updateFlowpoints(flowpoints)\n                      }}\n                      type=\"number\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      style={{width:'100px', paddingRight:'5px'}}/>\n                  )\n                })\n              }\n            </FormGroup>\n          </div>\n        </div>\n      )\n    }\n    return (\n      <Typography variant=\"subtitle1\" color=\"textSecondary\">\n        No parameters\n      </Typography>\n    )\n  }\n}\n\n\nexport const FlowpointSettings = (props) => {\n  const localState = props.localState\n  const key = props.localState.key\n  const layertypes = props.localState.layertypes\n  const activationtypes = props.localState.activationtypes\n  return (\n    <div className='card-contents'>\n      <form\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={(e) => {e.preventDefault()}}>\n        <Select\n          native\n          margin='none'\n          style={{marginLeft:'10px', width:'70%'}}\n          value={localState.flowtype}\n          onChange={(e) => {\n            var flowpoints = props.refresh().flowpoints\n            var myState = flowpoints[key]\n            myState.flowtype = e.target.value\n            if (myState.flowtype.includes('input')) {\n              myState.inputs.map(inpkey => {\n                flowpoints[inpkey].outputs.splice(flowpoints[inpkey].outputs.indexOf(localState.key))\n              })\n              myState.inputs = []\n            }\n            props.updateFlowpoints(flowpoints)\n          }}>\n          <option value='input'>Input</option>\n          <Divider />\n          {\n            Object.keys(layertypes).map(layerkey => {\n              return <option value={layerkey}>{layertypes[layerkey].title}</option>\n            })\n          }\n          <Divider />\n          {\n            Object.keys(activationtypes).map(activationkey => {\n              return <option value={activationkey}>{activationtypes[activationkey].title}</option>\n            })\n          }\n        </Select>\n        <IconButton\n          style={{marginLeft:'10px', top:'5px'}}\n          onClick={() => {\n            var flowpoints = props.refresh().flowpoints\n            var myState = flowpoints[localState.key]\n            myState.isOpen ^= true\n            props.updateFlowpoints(flowpoints)\n          }}>\n          {\n            localState.isOpen ? <ExpandLessIcon/> : <ExpandMoreIcon/>\n          }\n        </IconButton>\n      </form>\n      {\n        localState.isOpen ? <div style={{marginLeft:'5px'}}>\n          <FlowpointParams\n            localState={localState}\n            refresh={props.refresh}\n            updateFlowpoints={props.updateFlowpoints}/>\n        </div> : null\n      }\n    </div>\n  )\n}\n","import React, { Component } from 'react';\n\nimport Draggable from 'react-draggable';\n\nimport Card from '@material-ui/core/Card';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport RightIcon from '@material-ui/icons/KeyboardArrowRight';\n\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport { FlowpointSettings } from './FlowpointSettings'\n\nfunction shapeMsg(shape) {\n  var msg = '['\n  shape.map(val => {msg += val + ','})\n  msg = msg.substring(0, msg.length-1)\n  msg += ']'\n  return msg\n}\n\nconst ConnectInput = (props) => {\n  const localState = props.localState\n  var settings = props.settings\n  const refresh = props.refresh\n  const updateView = props.updateView\n  const currentOutput = settings.currentOutput\n  const currentInput = settings.currentInput\n  return (\n    <div style={{width:'auto', float:'left', pointerEvents:'auto'}}>\n      {\n        (!localState.flowtype.includes('input')) ? <IconButton\n          aria-label=\"Input\"\n          style={{'color':'#006ed6', 'boxShadow':'none', 'background':(localState.key === currentInput ? '#bfd7ff' : null)}}\n          onClick={() => {\n            var flowpoints = refresh().flowpoints\n            var myState = flowpoints[localState.key]\n            if (currentOutput != null) {\n              var point = flowpoints[currentOutput]\n              if (point.outputs.includes(myState.key)) {\n                point.outputs.splice(point.outputs.indexOf(myState.key), 1)\n                myState.inputs.splice(myState.inputs.indexOf(currentOutput), 1)\n              } else {\n                point.outputs.push(myState.key)\n                myState.inputs.push(currentOutput)\n              }\n              settings.currentOutput = null\n              settings.currentInput = null\n            } else {\n              if (currentInput === myState.key) {\n                settings.currentInput = null\n              } else {\n                settings.currentInput = myState.key\n              }\n            }\n            updateView(flowpoints, settings)\n          }}>\n          <RightIcon fontSize='small'/>\n        </IconButton> : <IconButton\n          aria-label=\"Output\"\n          disabled\n          style={{'color':'#006ed6', 'boxShadow':'none', 'background':null}}>\n          <CloseIcon fontSize='small'/>\n        </IconButton>\n      }\n    </div>\n  )\n}\n\nconst ConnectOutput = (props) => {\n  const localState = props.localState\n  var settings = props.settings\n  const refresh = props.refresh\n  const updateView = props.updateView\n  const currentOutput = settings.currentOutput\n  const currentInput = settings.currentInput\n  return (\n    <div style={{width:'auto', height:'100%', float:'left', pointerEvents:'auto'}}>\n      {\n        localState.gotOutput ? <IconButton\n          aria-label=\"Input\"\n          style={{'color':'#006ed6', 'boxShadow':'none', 'background':(localState.key === currentOutput ? '#bfd7ff' : null)}}\n          onClick={() => {\n            var flowpoints = refresh().flowpoints\n            var myState = flowpoints[localState.key]\n            if (currentInput != null) {\n              var point = flowpoints[currentInput]\n              if (point.inputs.includes(myState.key)) {\n                point.inputs.splice(point.inputs.indexOf(myState.key), 1)\n                myState.outputs.splice(myState.outputs.indexOf(currentInput), 1)\n              } else {\n                point.inputs.push(myState.key)\n                myState.outputs.push(currentInput)\n              }\n              settings.currentOutput = null\n              settings.currentInput = null\n            } else {\n              if (currentOutput === myState.key) {\n                settings.currentOutput = null\n              } else {\n                settings.currentOutput = myState.key\n              }\n            }\n            updateView(flowpoints, settings)\n          }}>\n          <RightIcon fontSize='small'/>\n        </IconButton> : <IconButton\n          aria-label=\"Output\"\n          disabled\n          style={{'color':'#006ed6', 'boxShadow':'none', 'background':null}}>\n          <CloseIcon fontSize='small'/>\n        </IconButton>\n      }\n    </div>\n  )\n}\n\nexport const Flowpoint = (props) => {\n  const localState = props.localState\n  if (localState) {\n    const refresh = props.refresh\n    const updateFlowpoints = props.updateFlowpoints\n    const updateSettings = props.updateSettings\n    const updateView = props.updateView\n    const key = localState.key\n    const settings = refresh().settings\n    const snapX = settings.snapX\n    const snapY = settings.snapY\n    return (\n      <Draggable\n        grid={[snapX, snapY]}\n        bounds={{left: 0, top: 0}}\n        cancel='.card-contents'\n        defaultPosition={{x: localState.x - (localState.x % snapX), y: localState.y - (localState.y % snapY)}}\n        onDrag={(event, dragElement) => {\n          event.preventDefault()\n          var flowpoints = refresh().flowpoints\n          var myState = flowpoints[key]\n          myState.x = dragElement.x\n          myState.y = dragElement.y\n          myState.height = dragElement.node.clientHeight\n          props.updateLastPos(myState.x, myState.y)\n          updateFlowpoints(flowpoints)\n        }}>\n        <div style={{'width':localState.width, 'padding':'0px', paddingBottom:'5px', position:'absolute', pointerEvents:'none', zIndex:localState.isOpen ? 1 : 0}}>\n          <ConnectInput\n            localState={localState}\n            settings={settings}\n            refresh={refresh}\n            updateView={updateView}/>\n          <div style={{width:'70%', float:'left', pointerEvents:'auto'}}>\n            <Card>\n              <div style={{marginLeft:'10px', marginTop:'2px', marginRight:'10px'}}>\n                <FlowpointSettings\n                  localState={localState}\n                  settings={settings}\n                  refresh={refresh}\n                  updateFlowpoints={updateFlowpoints}/>\n              </div>\n              <div style={{padding:'2px', float:'left'}}>\n                <Tooltip title=\"Delete\">\n                  <IconButton\n                    aria-label='Delete'\n                    onClick={() => {\n                      var flowpoints = refresh().flowpoints\n                      var myState = flowpoints[localState.key]\n                      myState.inputs.map((testkey) => {\n                        var point = flowpoints[testkey]\n                        point.outputs.splice(point.outputs.indexOf(myState.key), 1)\n                      })\n                      myState.outputs.map((testkey) => {\n                        var point = flowpoints[testkey]\n                        point.inputs.splice(point.inputs.indexOf(myState.key), 1)\n                      })\n                      delete flowpoints[key]\n                      if (Object.keys(flowpoints).length === 0) {\n                        props.updateLastPos(0, 0)\n                      }\n                      updateFlowpoints(flowpoints)\n                    }}>\n                    <DeleteIcon/>\n                  </IconButton>\n                </Tooltip>{'  '}\n                {\n                  shapeMsg(localState.output_shape)\n                }\n              </div>\n            </Card>\n          </div>\n          <ConnectOutput\n            localState={localState}\n            settings={settings}\n            refresh={refresh}\n            updateView={updateView}/>\n        </div>\n      </Draggable>\n    )\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Flowpoint } from './Flowpoint.js'\n\nexport const DrawPoints = (props) => {\n  const flowpoints = props.refresh().flowpoints\n  const points = Object.keys(flowpoints).map((key, index) => {\n    return (\n      <Flowpoint\n        key={key}\n        localState={flowpoints[key]}\n        updateLastPos={props.updateLastPos}\n        lastPosX={props.lastPosX}\n        lastPosY={props.lastPosY}\n        state={props.state}\n        refresh={props.refresh}\n        updateFlowpoints={props.updateFlowpoints}\n        updateSettings={props.updateSettings}\n        updateView={props.updateView}/>\n    )\n  })\n  return (\n    <div style={{width:'100%', height:'100%'}}>\n      {\n        points\n      }\n    </div>\n  )\n}\n","import React, { Component } from 'react';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Fab from '@material-ui/core/Fab';\n\nimport { FaLinkedin, FaFacebook, FaGithub } from 'react-icons/fa';\n\n\nexport const TopBar = (props) => {\n  return (\n    <AppBar position=\"fixed\" style={{height:'60px', background:'#0a9dff', boxShadow:'none'}}>\n        <Toolbar>\n          <div style={{flexGrow:1}}>\n            <Typography variant=\"h6\" color=\"inherit\">\n              Flowpoints ML\n            </Typography>\n          </div>\n          <IconButton\n            style={{color:'#ffffff'}}\n            href=\"https://github.com/mariusbrataas/flowpoints_ml#readme\"\n            target=\"_blank\">\n            <FaGithub/>\n          </IconButton>\n          <IconButton\n            style={{color:'#ffffff'}}\n            href=\"https://www.linkedin.com/in/marius-brataas-355567106/\"\n            target=\"_blank\">\n            <FaLinkedin/>\n          </IconButton>\n          <IconButton\n            style={{color:'#ffffff'}}\n            href=\"https://www.facebook.com/marius.brataas\"\n            target=\"_blank\">\n            <FaFacebook/>\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n  )\n}\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport Snackbar from '@material-ui/core/Snackbar';\n\n// Importing local tools\nimport { Codepaper } from './flowparser/Codepaper.js'\nimport { AppBottom, gen_url, parse_url } from './helpers/AppBottom.js'\nimport { DrawConnections } from './helpers/DrawConnections.js'\nimport { DrawPoints } from './flowpoint/DrawPoints.js'\nimport { TopBar } from './helpers/TopBar.js'\nimport { getOrdered, getInputs } from './flowparser/FlowOrder'\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.bezierOffset = 90\n    this.lastPosX = 0\n    this.lastPosY = 0\n    this.maxX = 0\n    this.maxY = 0\n    this.state = {\n      flowpoints: {},\n      settings: {\n        count: 0,\n        zoom: 1.0,\n        currentInput: null,\n        currentOutput: null,\n        showPaper: false,\n        snapX: 10,\n        snapY: 10,\n        showSnackbar: false,\n        snackbarMsg: 'Wubbalubbadubdub',\n        url: 'https://mariusbrataas.github.io/flowpoints_ml'\n      }\n    };\n    this.updateLastPos = this.updateLastPos.bind(this)\n    this.updateFrameSize = this.updateFrameSize.bind(this)\n    this.autoFrameSize = this.autoFrameSize.bind(this)\n    this.setOutputShapes = this.setOutputShapes.bind(this)\n  }\n  updateLastPos(x, y) {\n    this.lastPosX = x\n    this.lastPosY = y\n  }\n  updateFrameSize(x, y) {\n    this.maxX = x\n    this.maxY = y\n  }\n  autoFrameSize() {\n    const flowpoints = this.state.flowpoints\n    const mult = this.state.settings.showPaper ? 4 : 2\n    var maxX = 10\n    var maxY = 10\n    Object.keys(flowpoints).map((key) => {\n      const point = flowpoints[key]\n      maxX = Math.max(maxX, point.x + mult * point.width)\n      maxY = Math.max(maxY, point.y + 2 * point.height)\n    })\n    this.updateFrameSize(maxX, maxY)\n  }\n  componentWillMount() {\n    const addr = window.location.href\n    if (addr.includes('load?')) {\n      try {\n        var flowpoints = parse_url(addr.split('load?')[1])\n        var settings = this.state.settings\n        var max_idx = 0\n        Object.keys(flowpoints).map(key => {\n          max_idx = Math.max(max_idx, parseInt(key) + 1)\n        })\n        settings.count = max_idx\n        this.setState({flowpoints, settings})\n      } catch (error) {\n        var settings = this.state.settings\n        settings.snackbarMsg = 'Failed to load model.'\n        settings.showSnackbar = true\n        this.setState({settings})\n      }\n    }\n  }\n  setOutputShapes(inps, order) {\n    order.map((key, index) => {\n      var point = this.state.flowpoints[key]\n      var params = null\n      if (!point.flowtype.includes('input')) {\n        if (point.flowtype in point.layertypes) {\n          params = point.layertypes[point.flowtype]\n        } else {\n          params = point.activationtypes[point.flowtype]\n        }\n        var bestInp = null\n        point.inputs.map(inpkey => {\n          if (order.indexOf(key) > order.indexOf(inpkey)) {\n            bestInp = inpkey\n          }\n        })\n        if (bestInp != null) {\n          params.params = params.autoparams(this.state.flowpoints[bestInp].output_shape, params.params)\n          this.state.flowpoints[key].output_shape = params.outshape(this.state.flowpoints[bestInp].output_shape, params.params)\n        }\n      }\n    })\n  }\n  render() {\n    this.autoFrameSize()\n    var order = []\n    var inps = []\n    if (Object.keys(this.state.flowpoints).length != 0) {\n      inps = getInputs(this.state.flowpoints)\n      order = getOrdered(this.state.flowpoints, inps)\n      // Updating output shapes\n      this.setOutputShapes(inps, order)\n    }\n    if (order.length > 0) {\n      //window.history.replaceState({}, null, this.state.settings.url + '/load?' + gen_url(this.state.flowpoints, order))\n      window.history.replaceState({}, null, this.state.settings.url + '/?p=' + 'load?' + gen_url(this.state.flowpoints, order))\n    } else {\n      window.history.replaceState({}, null, this.state.settings.url)\n    }\n    return (\n      <div>\n        <div ref={this.mainRef} style={{width:'100vw', height:'90vh', paddingTop:'10vh', overflow:'scroll'}}>\n          <Codepaper\n            flowpoints={this.state.flowpoints}\n            settings={this.state.settings}/>\n          <div style={{transform:'scale(' + this.state.settings.zoom + ')', 'transform-origin':'top left', 'transition':'.1s ease-in-out'}}>\n            <div style={{width:this.maxX+50, height:this.maxY+50, position:'relative'}}>\n              <DrawConnections flowpoints={this.state.flowpoints}/>\n              <DrawPoints\n                flowpoints={this.state.flowpoints}\n                updateLastPos={this.updateLastPos}\n                lastPosX={this.lastPosX}\n                lastPosY={this.lastPosY}\n                state={this.state}\n                refresh={() => {return this.state}}\n                updateFlowpoints={(flowpoints) => {this.setState({flowpoints})}}\n                updateSettings={(settings) => {this.setState({settings})}}\n                updateView={(flowpoints, settings) => {this.setState({flowpoints, settings})}}/>\n            </div>\n          </div>\n          <div style={{top:'0px', position:'fixed', zIndex:5}}>\n            <TopBar/>\n          </div>\n          <AppBottom\n            updateLastPos={this.updateLastPos}\n            lastPosX={this.lastPosX}\n            lastPosY={this.lastPosY}\n            state={this.state}\n            order={order}\n            refresh={() => {return this.state}}\n            updateFlowpoints={(flowpoints) => {this.setState({flowpoints})}}\n            updateSettings={(settings) => {this.setState({settings})}}\n            updateView={(flowpoints, settings) => {this.setState({flowpoints, settings})}}/>\n          <Snackbar\n            anchorOrigin={{vertical: 'bottom', horizontal: 'left'}}\n            open={this.state.settings.showSnackbar}\n            autoHideDuration={3000}\n            onClose={() => {\n              var settings = this.state.settings\n              settings.showSnackbar = false\n              this.setState({settings})\n            }}\n            message={this.state.settings.snackbarMsg}\n            style={{width:'auto'}} />\n        </div>\n      </div>\n    )\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}